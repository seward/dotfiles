# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "
export HISTCONTROL="none"
export PROMPT_COMMAND='echo "$(history 1)" >> ~/.bash_eternal_history'

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  source /etc/bash_completion
fi

# Environment variables
if [ -f ~/.bash_envs ]; then
  source ~/.bash_envs
fi

# Alias definitions
if [ -f ~/.bash_aliases ]; then
  source ~/.bash_aliases
fi

# Bash functions
if [ -f ~/.bash_functions ]; then
  source ~/.bash_functions
fi

# git completion scripts
if [ -f ~/.git_completion.bash ]; then
  source ~/.git_completion.bash
fi
if [ -f ~/.git_prompt.sh ]; then
  source ~/.git_prompt.sh
fi

COLOR_CLEAR="\e[0m"
COLOR_LIGHT_GREEN='\e[1;32m'
COLOR_YELLOW='\e[1;33m'
COLOR_LIGHT_BLUE='\e[1;34m'
COLOR_LIGHT_PURPLE='\e[1;35m'
COLOR_LIGHT_CYAN='\e[1;36m'
COLOR_RED='\e[0;31m'
COLOR_LIGHT_RED='\e[1;31m'

# Set the prompt
case $(hostname) in
    thurisaz) COLOR_HOSTNAME="${COLOR_LIGHT_BLUE}";;
    ehwaz) COLOR_HOSTNAME="${COLOR_LIGHT_PURPLE}";;
    *) COLOR_HOSTNAME="${COLOR_YELLOW}";;
esac

GIT_PS1_SHOWDIRTYSTATE='true'
GIT_PS1_SHOWUNTRACKEDFILES='true'
GIT_PS1_SHOWSTASHSTATS='true'
if [ "$color_prompt" = yes ]; then
  GIT_PS1_SHOWCOLORHINTS='true'
  PS1="${COLOR_LIGHT_GREEN}\u${COLOR_CLEAR}@${COLOR_HOSTNAME}\h${COLOR_CLEAR}: ${COLOR_YELLOW}\w ${COLOR_LIGHT_CYAN}\$(__git_ps1)\nðŸš€ ${COLOR_CLEAR}"
  unset COLOR_HOSTNAME
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$(__git_ps1)\nðŸš€ '
fi
unset color_prompt force_color_prompt


# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
  PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
  ;;
*)
  ;;
esac

# blue offends me
redshift

touchscreen-off
